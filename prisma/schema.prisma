generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Status {
  ENABLED
  DISABLED
}

enum Role {
  ADMIN
  STOCK_OWNER
  STOCK_MANAGER
}

model User {
  id            String  @id @default(uuid())
  email         String  @unique
  userName      String
  fullName      String
  phoneNumber   String?
  password      String
  emailVerified Boolean @default(false)
  role          Role    @default(STOCK_OWNER)
  status        Status  @default(ENABLED)

  stockOwnerId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ownedStocks   Stock[]    @relation(name: "StockOwner")
  managedStocks Stock[]    @relation(name: "StockManagers")
  Supplier      Supplier[]
}

model UserVerificationCodes {
  id    String @id @default(uuid())
  email String
  otp   String

  createdAt DateTime @default(now()) @map("created_at")
  expiresAt DateTime @map("expires_at")

  @@index([expiresAt])
}

model Supplier {
  id           String @id @default(uuid())
  name         String
  contact      String
  status       Status @default(ENABLED)
  stockOwnerId String
  createdBy    String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user     User      @relation(fields: [stockOwnerId], references: [id], onDelete: Cascade)
  products Product[]
}

model Stock {
  id            String @id @default(uuid())
  name          String
  streetAddress String
  status        Status @default(ENABLED)

  stockOwnerId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  stockOwner    User      @relation(name: "StockOwner", fields: [stockOwnerId], references: [id], onDelete: Cascade)
  stockManagers User[]    @relation(name: "StockManagers")
  products      Product[]
}

model Product {
  id             String @id @default(uuid())
  name           String
  quantity       Int
  thresholdValue Int
  supplierId     String
  stockId        String
  status         Status @default(ENABLED)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  supplier Supplier @relation(fields: [supplierId], references: [id])
  stock    Stock    @relation(fields: [stockId], references: [id])
}